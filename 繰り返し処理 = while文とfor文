繰り返し処理 = while文とfor文
※条件式がfalseを返す可能性はあるか」を必ず確認する

★構文	　　　　▲使うケース	　　　　　　　　　　　　　　　◆例
★while文	　　　▲繰り返す回数があらかじめわからない場合	　◆サイコロで6の目が出るまで繰り返す
★for文	　　　　▲繰り返す回数があらかじめわかっている場合	◆1～10までの数字を順番に表示する


★while文
---------------------------
while (条件式) {
  条件を満たしている間、繰り返す処理
}
--------------------------------------------------------------------------
★比較演算子	　◆処理の内容
★==	　　　　　2つの値が等しい場合はtrueを返す（等価演算子）。
★===	　　　　　2つの値とデータ型が等しい場合はtrueを返す（厳密等価演算子）。
★!=	　　　　　2つの値が等しくない場合はtrueを返す。
★!==	　　　　　2つの値とデータ型が等しくない場合はtrueを返す。
★>	　　　　　　左辺の値が右辺の値よりも大きい場合はtrueを返す。
★>=　　　　	　左辺の値が右辺の値以上の場合はtrueを返す。
★<	　　　　　　左辺の値が右辺の値よりも小さい場合はtrueを返す。
★<=　　　　	　左辺の値が右辺の値以下の場合はtrueを返す。
---------------------------------------------------------------------------
 // 変数numに0～4までのランダムな整数を代入する
 let num = Math.floor(Math.random() * 5);
 
 // 変数numの最初の値を出力する（確認用）
 console.log('最初の値は' + num + 'です');
 
 // 変数numの値が0以外である間、変数numの値を出力し続ける
 while (num !== 0) {
   // 変数numに0～4までのランダムな整数を再代入する
   num = Math.floor(Math.random() * 5);
 
   // 次の条件式で比較される、変数numの現在の値を出力する
   console.log('現在の値は' + num + 'です');
 }
---------------------------------------------------------------------------

★for文
------------------------------------------------------------------
for (カウンタ変数の初期値; 条件式; カウンタ変数の増減値) {
  カウンタ変数が決まった値になるまで繰り返す処理
}
------------------------------------------------------------------

繰り返し処理 = while文とfor文
※条件式がfalseを返す可能性はあるかを必ず確認する

★構文	　　　　▲使うケース	　　　　　　　　　　　　　　　◆例
★while文	　　　▲繰り返す回数があらかじめわからない場合	　◆サイコロで6の目が出るまで繰り返す
★for文	　　　　▲繰り返す回数があらかじめわかっている場合	◆1～10までの数字を順番に表示する


★while文
---------------------------
while (条件式) {
  条件を満たしている間、繰り返す処理
}
--------------------------------------------------------------------------
★比較演算子	　◆処理の内容
★==	　　　　　2つの値が等しい場合はtrueを返す（等価演算子）。
★===	　　　　　2つの値とデータ型が等しい場合はtrueを返す（厳密等価演算子）。
★!=	　　　　　2つの値が等しくない場合はtrueを返す。
★!==	　　　　　2つの値とデータ型が等しくない場合はtrueを返す。
★>	　　　　　　左辺の値が右辺の値よりも大きい場合はtrueを返す。
★>=　　　　	　左辺の値が右辺の値以上の場合はtrueを返す。
★<	　　　　　　左辺の値が右辺の値よりも小さい場合はtrueを返す。
★<=　　　　	　左辺の値が右辺の値以下の場合はtrueを返す。
---------------------------------------------------------------------------
 // 変数numに0～4までのランダムな整数を代入する
 let num = Math.floor(Math.random() * 5);
 
 // 変数numの最初の値を出力する（確認用）
 console.log('最初の値は' + num + 'です');
 
 // 変数numの値が0以外である間、変数numの値を出力し続ける
 while (num !== 0) {
   // 変数numに0～4までのランダムな整数を再代入する
   num = Math.floor(Math.random() * 5);
 
   // 次の条件式で比較される、変数numの現在の値を出力する
   console.log('現在の値は' + num + 'です');
 }
---------------------------------------------------------------------------

★for文
------------------------------------------------------------------
for (カウンタ変数の初期値; 条件式; カウンタ変数の増減値) {
  カウンタ変数が決まった値になるまで繰り返す処理
}
------------------------------------------------------------------
for (let i = 1; i <= 10; i += 1) {
  console.log(i);
}

丸括弧()内のコードを分解すると、以下のとおりです。
let i = 0
let i = 1：カウンタ変数の初期値（カウンタ変数iの宣言と値の代入を行う）
i <= 10：条件式（カウンタ変数iの値が10以下のときにtrueを返す）
i += 1：カウンタ変数の増減値（処理を繰り返すごとに、カウンタ変数iに1を加算する）
つまり、上記のコードはカウンタ変数iが1からスタートし、処理を繰り返すごとに1ずつ加算されていきます。
そして、カウンタ変数iが10より大きくなる（条件式i <= 10がfalseになる）と、繰り返し処理が終了します。
----------------------------------------------------------------------------------------------
★代入演算子	　　　▲処理の内容
★=　　　　　　　　	▲変数に右項の値を代入する（代入）。
★+=	　　　　　　　▲変数の値に右項の値を足して代入する（加算代入）。
★-=	　　　　　　　▲変数の値から右項の値を引いて代入する（減算代入）。
★*=	　　　　　　　▲変数の値に右項の値を掛けて代入する（乗算代入）。
★/=	　　　　　　　▲変数の値を右項の値で割って代入する（除算代入）。
★%=	　　　　　　　▲変数の値を右項の値で割った余りを代入する（剰余代入）。
-----------------------------------------------------------------------------------------
●インクリメント演算子：　i += 1 → i++
●デクリメント演算子：　　i -= 1 → i--
----------------------------------------


let holidays = ['正月','成人の日','建国記念日','天皇誕生日','春分の日','昭和の日','憲法記念日','みどりの日','こどもの日','海の日','山の日','敬老の日','秋分の日','スポーツの日','文化の日','勤労感謝の日'];

let index = 0;

while (index < holidays.length) {
  console.log(holidays[index]);
  index++;
}


for (let index = 0; index < holidays.length; index++) {
  console.log(holidays[index]);
} 



